[{"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/index.js":"1","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/reportWebVitals.js":"2","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/App.js":"3","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/components/Nav.js":"4","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/components/Form.js":"5","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/components/List.js":"6","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/scripts/requestApis/users/controller.js":"7","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/scripts/requestApis/users/model.js":"8","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/index.js":"9","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/reportWebVitals.js":"10","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/App.js":"11","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/components/Form.js":"12","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/components/List.js":"13","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/components/Nav.js":"14","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/scripts/requestApis/users/controller.js":"15","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/scripts/requestApis/users/model.js":"16"},{"size":313,"mtime":1609617032864,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1609615929649,"results":"19","hashOfConfig":"18"},{"size":2317,"mtime":1610209888475,"results":"20","hashOfConfig":"18"},{"size":1973,"mtime":1609645212544,"results":"21","hashOfConfig":"18"},{"size":6089,"mtime":1609696532861,"results":"22","hashOfConfig":"18"},{"size":5266,"mtime":1610210073182,"results":"23","hashOfConfig":"18"},{"size":1768,"mtime":1609691994594,"results":"24","hashOfConfig":"18"},{"size":3270,"mtime":1609691657663,"results":"25","hashOfConfig":"18"},{"size":313,"mtime":1609617032864,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1609615929649,"results":"28","hashOfConfig":"27"},{"size":4028,"mtime":1610221995232,"results":"29","hashOfConfig":"27"},{"size":4903,"mtime":1610221931184,"results":"30","hashOfConfig":"27"},{"size":3222,"mtime":1610221518338,"results":"31","hashOfConfig":"27"},{"size":1973,"mtime":1609645212544,"results":"32","hashOfConfig":"27"},{"size":1768,"mtime":1609691994594,"results":"33","hashOfConfig":"27"},{"size":3314,"mtime":1610214184560,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"wnykb",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1cl3hxl",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/index.js",[],["71","72"],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/reportWebVitals.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/App.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/components/Nav.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/components/Form.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/components/List.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/scripts/requestApis/users/controller.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api/src/scripts/requestApis/users/model.js",["73"],"export default class Model {\n       constructor() {}\n\n       async insert(name, email, password) {\n              const data = {\n                     name,\n                     email,\n                     password,\n              };\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/insert\",\n                            {\n                                   method: \"POST\",\n                                   dataType: \"json\",\n                                   body: JSON.stringify(data),\n                            }\n                     );\n                     const response = await request.text();\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async update(id, name, email, password) {\n              const data = {\n                     id,\n                     name,\n                     email,\n                     password,\n              };\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/update\",\n                            {\n                                   method: \"POST\",\n                                   dataType: \"json\",\n                                   body: JSON.stringify(data),\n                            }\n                     );\n                     const response = await request.text();\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async delete(id) {\n              const data = {\n                     id,\n              };\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/delete\",\n                            {\n                                   method: \"DELETE\",\n                                   dataType: \"json\",\n                                   body: JSON.stringify(data),\n                            }\n                     );\n                     const response = await request.text();\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async fetchAll() {\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/fetchAll\"\n                     );\n                     const response = await request.text();\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async fetchById(id) {\n              try {\n                     let data = \"id=\" + id;\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/fetchById?\" +\n                                   data\n                     );\n                     const response = await request.text();\n                     this.setState({ users: JSON.parse(response) });\n                     console.log(JSON.parse(response));\n              } catch (error) {\n                     throw error;\n              }\n       }\n}\n","/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/index.js",[],["74","75"],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/reportWebVitals.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/App.js",["76","77","78","79"],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/components/Form.js",["80"],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/components/List.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/components/Nav.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/scripts/requestApis/users/controller.js",[],"/home/brunodev/Documentos/VS Code Projects/ReactJs/crud-react-api-Hooks/src/scripts/requestApis/users/model.js",["81"],"export default class Model {\n       constructor() {}\n\n       async insert(name, email, password) {\n              const data = {\n                     name,\n                     email,\n                     password,\n              };\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/insert\",\n                            {\n                                   method: \"POST\",\n                                   dataType: \"json\",\n                                   body: JSON.stringify(data),\n                            }\n                     );\n                     const response = await request.text();\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async update(id, name, email, password) {\n              const data = {\n                     id,\n                     name,\n                     email,\n                     password,\n              };\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/update\",\n                            {\n                                   method: \"POST\",\n                                   dataType: \"json\",\n                                   body: JSON.stringify(data),\n                            }\n                     );\n                     const response = await request.text();\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async delete(id) {\n              const data = {\n                     id,\n              };\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/delete\",\n                            {\n                                   method: \"DELETE\",\n                                   dataType: \"json\",\n                                   body: JSON.stringify(data),\n                            }\n                     );\n                     const response = await request.text();\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async fetchAll() {\n              try {\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/fetchAll\"\n                     );\n                     const response = await request.text();\n                     console.log(response);\n                     return response;\n              } catch (error) {\n                     throw error;\n              }\n       }\n\n       async fetchById(id) {\n              try {\n                     let data = \"id=\" + id;\n                     const request = await fetch(\n                            \"http://localhost/apis-rest-php/apis/users/fetchById?\" +\n                                   data\n                     );\n                     const response = await request.text();\n                     this.setState({ users: JSON.parse(response) });\n                     console.log(JSON.parse(response));\n              } catch (error) {\n                     throw error;\n              }\n       }\n}\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":24},{"ruleId":"82","replacedBy":"90"},{"ruleId":"84","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":7,"nodeType":"94","messageId":"95","endLine":7,"endColumn":21},{"ruleId":"92","severity":1,"message":"96","line":31,"column":15,"nodeType":"94","messageId":"95","endLine":31,"endColumn":20},{"ruleId":"92","severity":1,"message":"97","line":32,"column":15,"nodeType":"94","messageId":"95","endLine":32,"endColumn":23},{"ruleId":"92","severity":1,"message":"98","line":33,"column":15,"nodeType":"94","messageId":"95","endLine":33,"endColumn":20},{"ruleId":"92","severity":1,"message":"99","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":24},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["100"],["101"],"no-unused-vars","'controllerUser' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'items' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]